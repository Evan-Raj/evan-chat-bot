credit:EVAN RAJ
const axios = require('axios');
const fs = require('fs');
const path = require('path');
const Jimp = require('jimp');
const logger = require('../utils/logger');

// Replace with your actual admin ID(s) from your config file
const adminIDs = ["your_admin_id_here"]; 
const offensiveWords = ["‡¶∂‡¶æ‡¶≤‡¶æ", "‡¶π‡¶æ‡¶∞‡¶æ‡¶Æ‡¶ú‡¶æ‡¶¶‡¶æ", "‡¶ï‡ßÅ‡¶§‡ßç‡¶§‡¶æ", "‡¶Æ‡¶æ‡¶ó‡¶ø‡¶∞", "‡¶ö‡ßÅ‡¶§‡¶ø‡¶Ø‡¶º‡¶æ"]; // Add more words here

module.exports = {
  name: "handleAdminInsult",
  description: "Trolls users who insult the admin using their own profile picture.",
  execute(api, event) {
    const message = event.body.toLowerCase();
    const insultedAdmin = event.mentions?.[adminIDs[0]]?.id;
    const containsOffensiveWord = offensiveWords.some(word => message.includes(word));

    if (insultedAdmin && containsOffensiveWord) {
      async function createTrollMeme() {
        try {
          // Get the user's profile picture URL
          const userProfileInfo = await api.getUserInfo(event.senderID);
          const userProfilePicUrl = userProfileInfo[event.senderID].thumbSrc;

          const imageResponse = await axios.get(userProfilePicUrl, { responseType: 'arraybuffer' });
          const image = await Jimp.read(imageResponse.data);

          // Get the default font
          const font = await Jimp.loadFont(Jimp.FONT_SANS_32_BLACK);
          const fontBig = await Jimp.loadFont(Jimp.FONT_SANS_64_BLACK);
          
          const memeText = [
            "‡¶è‡¶°‡¶Æ‡¶ø‡¶®‡¶ï‡ßá ‡¶ó‡¶æ‡¶≤‡¶ø ‡¶¶‡ßá‡¶ì‡ßü‡¶æ‡¶∞ ‡¶∏‡¶æ‡¶π‡¶∏? üòè",
            "‡¶≠‡ßÅ‡¶≤ ‡¶ú‡¶æ‡ßü‡¶ó‡¶æ‡ßü ‡¶è‡¶∏‡ßá‡¶õ‡ßã ‡¶¨‡¶®‡ßç‡¶ß‡ßÅ!",
            "‡¶è‡¶á ‡¶∏‡ßá‡¶á ‡¶¨‡ßç‡¶Ø‡¶ï‡ßç‡¶§‡¶ø ‡¶Ø‡ßá ‡¶è‡¶°‡¶Æ‡¶ø‡¶®‡¶ï‡ßá ‡¶ó‡¶æ‡¶≤‡¶ø ‡¶¶‡¶ø‡¶Ø‡¶º‡ßá‡¶õ‡ßá üòÇ"
          ];
          const randomText = memeText[Math.floor(Math.random() * memeText.length)];

          // Add text to the image
          image.resize(Jimp.AUTO, 500);
          image.print(fontBig, 10, 10, "Oops!");
          image.print(font, 10, 80, randomText);

          const outputPath = path.join(__dirname, `../cache/troll_meme_${Date.now()}.jpg`);
          await image.writeAsync(outputPath);

          api.sendMessage({
            body: `‡¶Ü‡¶∞‡ßá ‡¶≠‡¶æ‡¶á! ${event.senderID} ‡¶Æ‡¶®‡ßá ‡¶π‡¶Ø‡¶º ‡¶ú‡¶æ‡¶®‡ßá ‡¶®‡¶æ ‡¶è‡¶°‡¶Æ‡¶ø‡¶® ‡¶ï‡ßá‡•§ ‡¶è‡¶ñ‡¶® ‡¶§‡¶æ‡¶ï‡ßá ‡¶®‡¶ø‡ßü‡ßá ‡¶è‡¶ï‡¶ü‡ßÅ ‡¶Æ‡¶ú‡¶æ ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡¶ï‡•§`,
            attachment: fs.createReadStream(outputPath)
          }, event.threadID, () => fs.unlinkSync(outputPath));
          
          logger.log(`User ${event.senderID} trolled with a meme.`, "warn");

        } catch (error) {
          logger.log(`Failed to create troll meme: ${error.message}`, "error");
          api.sendMessage("‡¶¶‡ßÅ‡¶É‡¶ñ‡¶ø‡¶§, ‡¶è‡¶ñ‡¶® ‡¶ü‡ßç‡¶∞‡¶≤ ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶õ‡¶ø ‡¶®‡¶æ‡•§", event.threadID);
        }
      }
      
      createTrollMeme();
    }
  },
};
